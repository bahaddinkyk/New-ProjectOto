{"ast":null,"code":"/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function () {\n    'use strict';\n\n    var React = require('react');\n\n    // -----------------------------------------------------------------------------\n\n    var enableScopeAPI = false; // Experimental Create Event Handle API.\n    var enableTransitionTracing = false; // No known bugs, but needs performance testing\n\n    var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n    // as a normal prop instead of stripping it from the props object.\n    // Passes `ref` as a normal prop instead of stripping it from the props object\n    // during element creation.\n\n    var enableRefAsProp = true;\n    var enableRenderableContext = true; // Enables the `initialValue` option for `useDeferredValue`\n    // stuff. Intended to enable React core members to more easily debug scheduling\n    // issues in DEV builds.\n\n    var enableDebugTracing = false;\n    var REACT_ELEMENT_TYPE = Symbol.for('react.transitional.element');\n    var REACT_PORTAL_TYPE = Symbol.for('react.portal');\n    var REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\n    var REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\n    var REACT_PROFILER_TYPE = Symbol.for('react.profiler');\n    var REACT_PROVIDER_TYPE = Symbol.for('react.provider'); // TODO: Delete with enableRenderableContext\n\n    var REACT_CONSUMER_TYPE = Symbol.for('react.consumer');\n    var REACT_CONTEXT_TYPE = Symbol.for('react.context');\n    var REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\n    var REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\n    var REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\n    var REACT_MEMO_TYPE = Symbol.for('react.memo');\n    var REACT_LAZY_TYPE = Symbol.for('react.lazy');\n    var REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\n    var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\n    var FAUX_ITERATOR_SYMBOL = '@@iterator';\n    function getIteratorFn(maybeIterable) {\n      if (maybeIterable === null || typeof maybeIterable !== 'object') {\n        return null;\n      }\n      var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n      if (typeof maybeIterator === 'function') {\n        return maybeIterator;\n      }\n      return null;\n    }\n    var ReactSharedInternals = React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;\n    function error(format) {\n      {\n        {\n          for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n            args[_key2 - 1] = arguments[_key2];\n          }\n          printWarning('error', format, args);\n        }\n      }\n    }\n    function printWarning(level, format, args) {\n      // When changing this logic, you might want to also\n      // update consoleWithStackDev.www.js as well.\n      {\n        var stack = ReactSharedInternals.getStackAddendum();\n        if (stack !== '') {\n          format += '%s';\n          args = args.concat([stack]);\n        } // eslint-disable-next-line react-internal/safe-string-coercion\n\n        var argsWithFormat = args.map(function (item) {\n          return String(item);\n        }); // Careful: RN currently depends on this prefix\n\n        argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n        // breaks IE9: https://github.com/facebook/react/issues/13610\n        // eslint-disable-next-line react-internal/no-production-logging\n\n        Function.prototype.apply.call(console[level], console, argsWithFormat);\n      }\n    }\n    function getWrappedName(outerType, innerType, wrapperName) {\n      var displayName = outerType.displayName;\n      if (displayName) {\n        return displayName;\n      }\n      var functionName = innerType.displayName || innerType.name || '';\n      return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n    } // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n    function getContextName(type) {\n      return type.displayName || 'Context';\n    }\n    var REACT_CLIENT_REFERENCE$2 = Symbol.for('react.client.reference'); // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n    function getComponentNameFromType(type) {\n      if (type == null) {\n        // Host root, text node or just invalid type.\n        return null;\n      }\n      if (typeof type === 'function') {\n        if (type.$$typeof === REACT_CLIENT_REFERENCE$2) {\n          // TODO: Create a convention for naming client references with debug info.\n          return null;\n        }\n        return type.displayName || type.name || null;\n      }\n      if (typeof type === 'string') {\n        return type;\n      }\n      switch (type) {\n        case REACT_FRAGMENT_TYPE:\n          return 'Fragment';\n        case REACT_PORTAL_TYPE:\n          return 'Portal';\n        case REACT_PROFILER_TYPE:\n          return 'Profiler';\n        case REACT_STRICT_MODE_TYPE:\n          return 'StrictMode';\n        case REACT_SUSPENSE_TYPE:\n          return 'Suspense';\n        case REACT_SUSPENSE_LIST_TYPE:\n          return 'SuspenseList';\n      }\n      if (typeof type === 'object') {\n        {\n          if (typeof type.tag === 'number') {\n            error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n          }\n        }\n        switch (type.$$typeof) {\n          case REACT_PROVIDER_TYPE:\n            {\n              return null;\n            }\n          case REACT_CONTEXT_TYPE:\n            var context = type;\n            {\n              return getContextName(context) + '.Provider';\n            }\n          case REACT_CONSUMER_TYPE:\n            {\n              var consumer = type;\n              return getContextName(consumer._context) + '.Consumer';\n            }\n          case REACT_FORWARD_REF_TYPE:\n            return getWrappedName(type, type.render, 'ForwardRef');\n          case REACT_MEMO_TYPE:\n            var outerName = type.displayName || null;\n            if (outerName !== null) {\n              return outerName;\n            }\n            return getComponentNameFromType(type.type) || 'Memo';\n          case REACT_LAZY_TYPE:\n            {\n              var lazyComponent = type;\n              var payload = lazyComponent._payload;\n              var init = lazyComponent._init;\n              try {\n                return getComponentNameFromType(init(payload));\n              } catch (x) {\n                return null;\n              }\n            }\n        }\n      }\n      return null;\n    }\n\n    // $FlowFixMe[method-unbinding]\n    var hasOwnProperty = Object.prototype.hasOwnProperty;\n    var assign = Object.assign;\n\n    /*\n     * The `'' + value` pattern (used in perf-sensitive code) throws for Symbol\n     * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n     *\n     * The functions in this module will throw an easier-to-understand,\n     * easier-to-debug exception with a clear errors message message explaining the\n     * problem. (Instead of a confusing exception thrown inside the implementation\n     * of the `value` object).\n     */\n    // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n    function typeName(value) {\n      {\n        // toStringTag is needed for namespaced types like Temporal.Instant\n        var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n        var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object'; // $FlowFixMe[incompatible-return]\n\n        return type;\n      }\n    } // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n\n    function willCoercionThrow(value) {\n      {\n        try {\n          testStringCoercion(value);\n          return false;\n        } catch (e) {\n          return true;\n        }\n      }\n    }\n    function testStringCoercion(value) {\n      // If you ended up here by following an exception call stack, here's what's\n      // happened: you supplied an object or symbol value to React (as a prop, key,\n      // DOM attribute, CSS property, string ref, etc.) and when React tried to\n      // coerce it to a string using `'' + value`, an exception was thrown.\n      //\n      // The most common types that will cause this exception are `Symbol` instances\n      // and Temporal objects like `Temporal.Instant`. But any object that has a\n      // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n      // exception. (Library authors do this to prevent users from using built-in\n      // numeric operators like `+` or comparison operators like `>=` because custom\n      // methods are needed to perform accurate arithmetic or comparison.)\n      //\n      // To fix the problem, coerce this object or symbol value to a string before\n      // passing it to React. The most reliable way is usually `String(value)`.\n      //\n      // To find which value is throwing, check the browser or debugger console.\n      // Before this exception was thrown, there should be `console.error` output\n      // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n      // problem and how that type was used: key, atrribute, input value prop, etc.\n      // In most cases, this console output also shows the component and its\n      // ancestor components where the exception happened.\n      //\n      // eslint-disable-next-line react-internal/safe-string-coercion\n      return '' + value;\n    }\n    function checkKeyStringCoercion(value) {\n      {\n        if (willCoercionThrow(value)) {\n          error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before using it here.', typeName(value));\n          return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n        }\n      }\n    }\n    var REACT_CLIENT_REFERENCE$1 = Symbol.for('react.client.reference');\n    function isValidElementType(type) {\n      if (typeof type === 'string' || typeof type === 'function') {\n        return true;\n      } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n      if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableTransitionTracing) {\n        return true;\n      }\n      if (typeof type === 'object' && type !== null) {\n        if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || !enableRenderableContext || type.$$typeof === REACT_CONSUMER_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE ||\n        // This needs to include all possible module reference object\n        // types supported by any Flight configuration anywhere since\n        // we don't know which Flight build this will end up being used\n        // with.\n        type.$$typeof === REACT_CLIENT_REFERENCE$1 || type.getModuleId !== undefined) {\n          return true;\n        }\n      }\n      return false;\n    }\n    var isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\n    function isArray(a) {\n      return isArrayImpl(a);\n    }\n\n    // Helpers to patch console.logs to avoid logging during side-effect free\n    // replaying on render function. This currently only patches the object\n    // lazily which won't cover if the log function was extracted eagerly.\n    // We could also eagerly patch the method.\n    var disabledDepth = 0;\n    var prevLog;\n    var prevInfo;\n    var prevWarn;\n    var prevError;\n    var prevGroup;\n    var prevGroupCollapsed;\n    var prevGroupEnd;\n    function disabledLog() {}\n    disabledLog.__reactDisabledLog = true;\n    function disableLogs() {\n      {\n        if (disabledDepth === 0) {\n          /* eslint-disable react-internal/no-production-logging */\n          prevLog = console.log;\n          prevInfo = console.info;\n          prevWarn = console.warn;\n          prevError = console.error;\n          prevGroup = console.group;\n          prevGroupCollapsed = console.groupCollapsed;\n          prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n          var props = {\n            configurable: true,\n            enumerable: true,\n            value: disabledLog,\n            writable: true\n          }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n          Object.defineProperties(console, {\n            info: props,\n            log: props,\n            warn: props,\n            error: props,\n            group: props,\n            groupCollapsed: props,\n            groupEnd: props\n          });\n          /* eslint-enable react-internal/no-production-logging */\n        }\n        disabledDepth++;\n      }\n    }\n    function reenableLogs() {\n      {\n        disabledDepth--;\n        if (disabledDepth === 0) {\n          /* eslint-disable react-internal/no-production-logging */\n          var props = {\n            configurable: true,\n            enumerable: true,\n            writable: true\n          }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n          Object.defineProperties(console, {\n            log: assign({}, props, {\n              value: prevLog\n            }),\n            info: assign({}, props, {\n              value: prevInfo\n            }),\n            warn: assign({}, props, {\n              value: prevWarn\n            }),\n            error: assign({}, props, {\n              value: prevError\n            }),\n            group: assign({}, props, {\n              value: prevGroup\n            }),\n            groupCollapsed: assign({}, props, {\n              value: prevGroupCollapsed\n            }),\n            groupEnd: assign({}, props, {\n              value: prevGroupEnd\n            })\n          });\n          /* eslint-enable react-internal/no-production-logging */\n        }\n        if (disabledDepth < 0) {\n          error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n        }\n      }\n    }\n    var prefix;\n    function describeBuiltInComponentFrame(name) {\n      {\n        if (prefix === undefined) {\n          // Extract the VM specific prefix used by each line.\n          try {\n            throw Error();\n          } catch (x) {\n            var match = x.stack.trim().match(/\\n( *(at )?)/);\n            prefix = match && match[1] || '';\n          }\n        } // We use the prefix to ensure our stacks line up with native stack frames.\n\n        return '\\n' + prefix + name;\n      }\n    }\n    var reentry = false;\n    var componentFrameCache;\n    {\n      var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n      componentFrameCache = new PossiblyWeakMap();\n    }\n    /**\n     * Leverages native browser/VM stack frames to get proper details (e.g.\n     * filename, line + col number) for a single component in a component stack. We\n     * do this by:\n     *   (1) throwing and catching an error in the function - this will be our\n     *       control error.\n     *   (2) calling the component which will eventually throw an error that we'll\n     *       catch - this will be our sample error.\n     *   (3) diffing the control and sample error stacks to find the stack frame\n     *       which represents our component.\n     */\n\n    function describeNativeComponentFrame(fn, construct) {\n      // If something asked for a stack inside a fake render, it should get ignored.\n      if (!fn || reentry) {\n        return '';\n      }\n      {\n        var frame = componentFrameCache.get(fn);\n        if (frame !== undefined) {\n          return frame;\n        }\n      }\n      reentry = true;\n      var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe[incompatible-type] It does accept undefined.\n\n      Error.prepareStackTrace = undefined;\n      var previousDispatcher = null;\n      {\n        previousDispatcher = ReactSharedInternals.H; // Set the dispatcher in DEV because this might be call in the render function\n        // for warnings.\n\n        ReactSharedInternals.H = null;\n        disableLogs();\n      }\n      /**\n       * Finding a common stack frame between sample and control errors can be\n       * tricky given the different types and levels of stack trace truncation from\n       * different JS VMs. So instead we'll attempt to control what that common\n       * frame should be through this object method:\n       * Having both the sample and control errors be in the function under the\n       * `DescribeNativeComponentFrameRoot` property, + setting the `name` and\n       * `displayName` properties of the function ensures that a stack\n       * frame exists that has the method name `DescribeNativeComponentFrameRoot` in\n       * it for both control and sample stacks.\n       */\n\n      var RunInRootFrame = {\n        DetermineComponentFrameRoot: function () {\n          var control;\n          try {\n            // This should throw.\n            if (construct) {\n              // Something should be setting the props in the constructor.\n              var Fake = function () {\n                throw Error();\n              }; // $FlowFixMe[prop-missing]\n\n              Object.defineProperty(Fake.prototype, 'props', {\n                set: function () {\n                  // We use a throwing setter instead of frozen or non-writable props\n                  // because that won't throw in a non-strict mode function.\n                  throw Error();\n                }\n              });\n              if (typeof Reflect === 'object' && Reflect.construct) {\n                // We construct a different control for this case to include any extra\n                // frames added by the construct call.\n                try {\n                  Reflect.construct(Fake, []);\n                } catch (x) {\n                  control = x;\n                }\n                Reflect.construct(fn, [], Fake);\n              } else {\n                try {\n                  Fake.call();\n                } catch (x) {\n                  control = x;\n                } // $FlowFixMe[prop-missing] found when upgrading Flow\n\n                fn.call(Fake.prototype);\n              }\n            } else {\n              try {\n                throw Error();\n              } catch (x) {\n                control = x;\n              } // TODO(luna): This will currently only throw if the function component\n              // tries to access React/ReactDOM/props. We should probably make this throw\n              // in simple components too\n\n              var maybePromise = fn(); // If the function component returns a promise, it's likely an async\n              // component, which we don't yet support. Attach a noop catch handler to\n              // silence the error.\n              // TODO: Implement component stacks for async client components?\n\n              if (maybePromise && typeof maybePromise.catch === 'function') {\n                maybePromise.catch(function () {});\n              }\n            }\n          } catch (sample) {\n            // This is inlined manually because closure doesn't do it for us.\n            if (sample && control && typeof sample.stack === 'string') {\n              return [sample.stack, control.stack];\n            }\n          }\n          return [null, null];\n        }\n      }; // $FlowFixMe[prop-missing]\n\n      RunInRootFrame.DetermineComponentFrameRoot.displayName = 'DetermineComponentFrameRoot';\n      var namePropDescriptor = Object.getOwnPropertyDescriptor(RunInRootFrame.DetermineComponentFrameRoot, 'name'); // Before ES6, the `name` property was not configurable.\n\n      if (namePropDescriptor && namePropDescriptor.configurable) {\n        // V8 utilizes a function's `name` property when generating a stack trace.\n        Object.defineProperty(RunInRootFrame.DetermineComponentFrameRoot,\n        // Configurable properties can be updated even if its writable descriptor\n        // is set to `false`.\n        // $FlowFixMe[cannot-write]\n        'name', {\n          value: 'DetermineComponentFrameRoot'\n        });\n      }\n      try {\n        var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(),\n          sampleStack = _RunInRootFrame$Deter[0],\n          controlStack = _RunInRootFrame$Deter[1];\n        if (sampleStack && controlStack) {\n          // This extracts the first frame from the sample that isn't also in the control.\n          // Skipping one frame that we assume is the frame that calls the two.\n          var sampleLines = sampleStack.split('\\n');\n          var controlLines = controlStack.split('\\n');\n          var s = 0;\n          var c = 0;\n          while (s < sampleLines.length && !sampleLines[s].includes('DetermineComponentFrameRoot')) {\n            s++;\n          }\n          while (c < controlLines.length && !controlLines[c].includes('DetermineComponentFrameRoot')) {\n            c++;\n          } // We couldn't find our intentionally injected common root frame, attempt\n          // to find another common root frame by search from the bottom of the\n          // control stack...\n\n          if (s === sampleLines.length || c === controlLines.length) {\n            s = sampleLines.length - 1;\n            c = controlLines.length - 1;\n            while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n              // We expect at least one stack frame to be shared.\n              // Typically this will be the root most one. However, stack frames may be\n              // cut off due to maximum stack limits. In this case, one maybe cut off\n              // earlier than the other. We assume that the sample is longer or the same\n              // and there for cut off earlier. So we should find the root most frame in\n              // the sample somewhere in the control.\n              c--;\n            }\n          }\n          for (; s >= 1 && c >= 0; s--, c--) {\n            // Next we find the first one that isn't the same which should be the\n            // frame that called our sample function and the control.\n            if (sampleLines[s] !== controlLines[c]) {\n              // In V8, the first line is describing the message but other VMs don't.\n              // If we're about to return the first line, and the control is also on the same\n              // line, that's a pretty good indicator that our sample threw at same line as\n              // the control. I.e. before we entered the sample frame. So we ignore this result.\n              // This can happen if you passed a class to function component, or non-function.\n              if (s !== 1 || c !== 1) {\n                do {\n                  s--;\n                  c--; // We may still have similar intermediate frames from the construct call.\n                  // The next one that isn't the same should be our match though.\n\n                  if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                    // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                    var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                    // but we have a user-provided \"displayName\"\n                    // splice it in to make the stack more readable.\n\n                    if (fn.displayName && _frame.includes('<anonymous>')) {\n                      _frame = _frame.replace('<anonymous>', fn.displayName);\n                    }\n                    if (true) {\n                      if (typeof fn === 'function') {\n                        componentFrameCache.set(fn, _frame);\n                      }\n                    } // Return the line we found.\n\n                    return _frame;\n                  }\n                } while (s >= 1 && c >= 0);\n              }\n              break;\n            }\n          }\n        }\n      } finally {\n        reentry = false;\n        {\n          ReactSharedInternals.H = previousDispatcher;\n          reenableLogs();\n        }\n        Error.prepareStackTrace = previousPrepareStackTrace;\n      } // Fallback to just using the name if we couldn't make it throw.\n\n      var name = fn ? fn.displayName || fn.name : '';\n      var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n      {\n        if (typeof fn === 'function') {\n          componentFrameCache.set(fn, syntheticFrame);\n        }\n      }\n      return syntheticFrame;\n    }\n    function describeFunctionComponentFrame(fn) {\n      {\n        return describeNativeComponentFrame(fn, false);\n      }\n    }\n    function shouldConstruct(Component) {\n      var prototype = Component.prototype;\n      return !!(prototype && prototype.isReactComponent);\n    }\n    function describeUnknownElementTypeFrameInDEV(type) {\n      if (type == null) {\n        return '';\n      }\n      if (typeof type === 'function') {\n        {\n          return describeNativeComponentFrame(type, shouldConstruct(type));\n        }\n      }\n      if (typeof type === 'string') {\n        return describeBuiltInComponentFrame(type);\n      }\n      switch (type) {\n        case REACT_SUSPENSE_TYPE:\n          return describeBuiltInComponentFrame('Suspense');\n        case REACT_SUSPENSE_LIST_TYPE:\n          return describeBuiltInComponentFrame('SuspenseList');\n      }\n      if (typeof type === 'object') {\n        switch (type.$$typeof) {\n          case REACT_FORWARD_REF_TYPE:\n            return describeFunctionComponentFrame(type.render);\n          case REACT_MEMO_TYPE:\n            // Memo may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(type.type);\n          case REACT_LAZY_TYPE:\n            {\n              var lazyComponent = type;\n              var payload = lazyComponent._payload;\n              var init = lazyComponent._init;\n              try {\n                // Lazy may contain any component type so we recursively resolve it.\n                return describeUnknownElementTypeFrameInDEV(init(payload));\n              } catch (x) {}\n            }\n        }\n      }\n      return '';\n    }\n    var REACT_CLIENT_REFERENCE = Symbol.for('react.client.reference');\n    function getOwner() {\n      {\n        var dispatcher = ReactSharedInternals.A;\n        if (dispatcher === null) {\n          return null;\n        }\n        return dispatcher.getOwner();\n      }\n    }\n    var specialPropKeyWarningShown;\n    var didWarnAboutElementRef;\n    {\n      didWarnAboutElementRef = {};\n    }\n    function hasValidRef(config) {\n      {\n        if (hasOwnProperty.call(config, 'ref')) {\n          var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n          if (getter && getter.isReactWarning) {\n            return false;\n          }\n        }\n      }\n      return config.ref !== undefined;\n    }\n    function hasValidKey(config) {\n      {\n        if (hasOwnProperty.call(config, 'key')) {\n          var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n          if (getter && getter.isReactWarning) {\n            return false;\n          }\n        }\n      }\n      return config.key !== undefined;\n    }\n    function defineKeyPropWarningGetter(props, displayName) {\n      {\n        var warnAboutAccessingKey = function () {\n          if (!specialPropKeyWarningShown) {\n            specialPropKeyWarningShown = true;\n            error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://react.dev/link/special-props)', displayName);\n          }\n        };\n        warnAboutAccessingKey.isReactWarning = true;\n        Object.defineProperty(props, 'key', {\n          get: warnAboutAccessingKey,\n          configurable: true\n        });\n      }\n    }\n    function elementRefGetterWithDeprecationWarning() {\n      {\n        var componentName = getComponentNameFromType(this.type);\n        if (!didWarnAboutElementRef[componentName]) {\n          didWarnAboutElementRef[componentName] = true;\n          error('Accessing element.ref was removed in React 19. ref is now a ' + 'regular prop. It will be removed from the JSX Element ' + 'type in a future release.');\n        } // An undefined `element.ref` is coerced to `null` for\n        // backwards compatibility.\n\n        var refProp = this.props.ref;\n        return refProp !== undefined ? refProp : null;\n      }\n    }\n    /**\n     * Factory method to create a new React element. This no longer adheres to\n     * the class pattern, so do not use new to call it. Also, instanceof check\n     * will not work. Instead test $$typeof field against Symbol.for('react.transitional.element') to check\n     * if something is a React Element.\n     *\n     * @param {*} type\n     * @param {*} props\n     * @param {*} key\n     * @param {string|object} ref\n     * @param {*} owner\n     * @param {*} self A *temporary* helper to detect places where `this` is\n     * different from the `owner` when React.createElement is called, so that we\n     * can warn. We want to get rid of owner and replace string `ref`s with arrow\n     * functions, and as long as `this` and owner are the same, there will be no\n     * change in behavior.\n     * @param {*} source An annotation object (added by a transpiler or otherwise)\n     * indicating filename, line number, and/or other information.\n     * @internal\n     */\n\n    function ReactElement(type, key, _ref, self, source, owner, props, debugStack, debugTask) {\n      var ref;\n      {\n        // When enableRefAsProp is on, ignore whatever was passed as the ref\n        // argument and treat `props.ref` as the source of truth. The only thing we\n        // use this for is `element.ref`, which will log a deprecation warning on\n        // access. In the next release, we can remove `element.ref` as well as the\n        // `ref` argument.\n        var refProp = props.ref; // An undefined `element.ref` is coerced to `null` for\n        // backwards compatibility.\n\n        ref = refProp !== undefined ? refProp : null;\n      }\n      var element;\n      {\n        // In dev, make `ref` a non-enumerable property with a warning. It's non-\n        // enumerable so that test matchers and serializers don't access it and\n        // trigger the warning.\n        //\n        // `ref` will be removed from the element completely in a future release.\n        element = {\n          // This tag allows us to uniquely identify this as a React Element\n          $$typeof: REACT_ELEMENT_TYPE,\n          // Built-in properties that belong on the element\n          type: type,\n          key: key,\n          props: props,\n          // Record the component responsible for creating this element.\n          _owner: owner\n        };\n        if (ref !== null) {\n          Object.defineProperty(element, 'ref', {\n            enumerable: false,\n            get: elementRefGetterWithDeprecationWarning\n          });\n        } else {\n          // Don't warn on access if a ref is not given. This reduces false\n          // positives in cases where a test serializer uses\n          // getOwnPropertyDescriptors to compare objects, like Jest does, which is\n          // a problem because it bypasses non-enumerability.\n          //\n          // So unfortunately this will trigger a false positive warning in Jest\n          // when the diff is printed:\n          //\n          //   expect(<div ref={ref} />).toEqual(<span ref={ref} />);\n          //\n          // A bit sketchy, but this is what we've done for the `props.key` and\n          // `props.ref` accessors for years, which implies it will be good enough\n          // for `element.ref`, too. Let's see if anyone complains.\n          Object.defineProperty(element, 'ref', {\n            enumerable: false,\n            value: null\n          });\n        }\n      }\n      {\n        // The validation flag is currently mutative. We put it on\n        // an external backing store so that we can freeze the whole object.\n        // This can be replaced with a WeakMap once they are implemented in\n        // commonly used development environments.\n        element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n        // the validation flag non-enumerable (where possible, which should\n        // include every environment we run tests in), so the test framework\n        // ignores it.\n\n        Object.defineProperty(element._store, 'validated', {\n          configurable: false,\n          enumerable: false,\n          writable: true,\n          value: false\n        }); // debugInfo contains Server Component debug information.\n\n        Object.defineProperty(element, '_debugInfo', {\n          configurable: false,\n          enumerable: false,\n          writable: true,\n          value: null\n        });\n        if (Object.freeze) {\n          Object.freeze(element.props);\n          Object.freeze(element);\n        }\n      }\n      return element;\n    }\n    var didWarnAboutKeySpread = {};\n    /**\n     * https://github.com/reactjs/rfcs/pull/107\n     * @param {*} type\n     * @param {object} props\n     * @param {string} key\n     */\n\n    function jsxDEV$1(type, config, maybeKey, isStaticChildren, source, self) {\n      {\n        if (!isValidElementType(type)) {\n          // This is an invalid element type.\n          //\n          // We warn in this case but don't throw. We expect the element creation to\n          // succeed and there will likely be errors in render.\n          var info = '';\n          if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n            info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n          }\n          var typeString;\n          if (type === null) {\n            typeString = 'null';\n          } else if (isArray(type)) {\n            typeString = 'array';\n          } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n            typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n            info = ' Did you accidentally export a JSX literal instead of a component?';\n          } else {\n            typeString = typeof type;\n          }\n          error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n        } else {\n          // This is a valid element type.\n          // Skip key warning if the type isn't valid since our key validation logic\n          // doesn't expect a non-string/function type and can throw confusing\n          // errors. We don't want exception behavior to differ between dev and\n          // prod. (Rendering will throw with a helpful message and as soon as the\n          // type is fixed, the key warnings will appear.)\n          var children = config.children;\n          if (children !== undefined) {\n            if (isStaticChildren) {\n              if (isArray(children)) {\n                for (var i = 0; i < children.length; i++) {\n                  validateChildKeys(children[i], type);\n                }\n                if (Object.freeze) {\n                  Object.freeze(children);\n                }\n              } else {\n                error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n              }\n            } else {\n              validateChildKeys(children, type);\n            }\n          }\n        } // Warn about key spread regardless of whether the type is valid.\n\n        if (hasOwnProperty.call(config, 'key')) {\n          var componentName = getComponentNameFromType(type);\n          var keys = Object.keys(config).filter(function (k) {\n            return k !== 'key';\n          });\n          var beforeExample = keys.length > 0 ? '{key: someKey, ' + keys.join(': ..., ') + ': ...}' : '{key: someKey}';\n          if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n            var afterExample = keys.length > 0 ? '{' + keys.join(': ..., ') + ': ...}' : '{}';\n            error('A props object containing a \"key\" prop is being spread into JSX:\\n' + '  let props = %s;\\n' + '  <%s {...props} />\\n' + 'React keys must be passed directly to JSX without using spread:\\n' + '  let props = %s;\\n' + '  <%s key={someKey} {...props} />', beforeExample, componentName, afterExample, componentName);\n            didWarnAboutKeySpread[componentName + beforeExample] = true;\n          }\n        }\n        var key = null;\n        var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n        // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n        // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n        // but as an intermediary step, we will use jsxDEV for everything except\n        // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n        // key is explicitly declared to be undefined or not.\n\n        if (maybeKey !== undefined) {\n          {\n            checkKeyStringCoercion(maybeKey);\n          }\n          key = '' + maybeKey;\n        }\n        if (hasValidKey(config)) {\n          {\n            checkKeyStringCoercion(config.key);\n          }\n          key = '' + config.key;\n        }\n        if (hasValidRef(config)) ;\n        var props;\n        if (!('key' in config)) {\n          // If key was not spread in, we can reuse the original props object. This\n          // only works for `jsx`, not `createElement`, because `jsx` is a compiler\n          // target and the compiler always passes a new object. For `createElement`,\n          // we can't assume a new object is passed every time because it can be\n          // called manually.\n          //\n          // Spreading key is a warning in dev. In a future release, we will not\n          // remove a spread key from the props object. (But we'll still warn.) We'll\n          // always pass the object straight through.\n          props = config;\n        } else {\n          // We need to remove reserved props (key, prop, ref). Create a fresh props\n          // object and copy over all the non-reserved props. We don't use `delete`\n          // because in V8 it will deopt the object to dictionary mode.\n          props = {};\n          for (var propName in config) {\n            // Skip over reserved prop names\n            if (propName !== 'key' && enableRefAsProp) {\n              {\n                props[propName] = config[propName];\n              }\n            }\n          }\n        }\n        if (key || !enableRefAsProp) {\n          var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n          if (key) {\n            defineKeyPropWarningGetter(props, displayName);\n          }\n        }\n        var element = ReactElement(type, key, ref, self, source, getOwner(), props);\n        if (type === REACT_FRAGMENT_TYPE) {\n          validateFragmentProps(element);\n        }\n        return element;\n      }\n    }\n    function getDeclarationErrorAddendum() {\n      {\n        var owner = getOwner();\n        if (owner) {\n          var name = getComponentNameFromType(owner.type);\n          if (name) {\n            return '\\n\\nCheck the render method of `' + name + '`.';\n          }\n        }\n        return '';\n      }\n    }\n    /**\n     * Ensure that every element either is passed in a static location, in an\n     * array with an explicit keys property defined, or in an object literal\n     * with valid key property.\n     *\n     * @internal\n     * @param {ReactNode} node Statically passed child of any type.\n     * @param {*} parentType node's parent's type.\n     */\n\n    function validateChildKeys(node, parentType) {\n      {\n        if (typeof node !== 'object' || !node) {\n          return;\n        }\n        if (node.$$typeof === REACT_CLIENT_REFERENCE) ;else if (isArray(node)) {\n          for (var i = 0; i < node.length; i++) {\n            var child = node[i];\n            if (isValidElement(child)) {\n              validateExplicitKey(child, parentType);\n            }\n          }\n        } else if (isValidElement(node)) {\n          // This element was passed in a valid location.\n          if (node._store) {\n            node._store.validated = true;\n          }\n        } else {\n          var iteratorFn = getIteratorFn(node);\n          if (typeof iteratorFn === 'function') {\n            // Entry iterators used to provide implicit keys,\n            // but now we print a separate warning for them later.\n            if (iteratorFn !== node.entries) {\n              var iterator = iteratorFn.call(node);\n              if (iterator !== node) {\n                var step;\n                while (!(step = iterator.next()).done) {\n                  if (isValidElement(step.value)) {\n                    validateExplicitKey(step.value, parentType);\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    /**\n     * Verifies the object is a ReactElement.\n     * See https://reactjs.org/docs/react-api.html#isvalidelement\n     * @param {?object} object\n     * @return {boolean} True if `object` is a ReactElement.\n     * @final\n     */\n\n    function isValidElement(object) {\n      return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n    }\n    var ownerHasKeyUseWarning = {};\n    /**\n     * Warn if the element doesn't have an explicit key assigned to it.\n     * This element is in an array. The array could grow and shrink or be\n     * reordered. All children that haven't already been validated are required to\n     * have a \"key\" property assigned to it. Error statuses are cached so a warning\n     * will only be shown once.\n     *\n     * @internal\n     * @param {ReactElement} element Element that requires a key.\n     * @param {*} parentType element's parent's type.\n     */\n\n    function validateExplicitKey(element, parentType) {\n      {\n        if (!element._store || element._store.validated || element.key != null) {\n          return;\n        }\n        element._store.validated = true;\n        var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n        if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n          return;\n        }\n        ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n        // property, it may be the creator of the child that's responsible for\n        // assigning it a key.\n\n        var childOwner = '';\n        if (element && element._owner != null && element._owner !== getOwner()) {\n          var ownerName = null;\n          if (typeof element._owner.tag === 'number') {\n            ownerName = getComponentNameFromType(element._owner.type);\n          } else if (typeof element._owner.name === 'string') {\n            ownerName = element._owner.name;\n          } // Give the component that originally created this child.\n\n          childOwner = \" It was passed a child from \" + ownerName + \".\";\n        }\n        setCurrentlyValidatingElement(element);\n        error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://react.dev/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n        setCurrentlyValidatingElement(null);\n      }\n    }\n    function setCurrentlyValidatingElement(element) {\n      {\n        if (element) {\n          var stack = describeUnknownElementTypeFrameInDEV(element.type);\n          ReactSharedInternals.setExtraStackFrame(stack);\n        } else {\n          ReactSharedInternals.setExtraStackFrame(null);\n        }\n      }\n    }\n    function getCurrentComponentErrorInfo(parentType) {\n      {\n        var info = getDeclarationErrorAddendum();\n        if (!info) {\n          var parentName = getComponentNameFromType(parentType);\n          if (parentName) {\n            info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n          }\n        }\n        return info;\n      }\n    }\n    /**\n     * Given a fragment, validate that it can only be provided with fragment props\n     * @param {ReactElement} fragment\n     */\n\n    function validateFragmentProps(fragment) {\n      // TODO: Move this to render phase instead of at element creation.\n      {\n        var keys = Object.keys(fragment.props);\n        for (var i = 0; i < keys.length; i++) {\n          var key = keys[i];\n          if (key !== 'children' && key !== 'key') {\n            setCurrentlyValidatingElement(fragment);\n            error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n            setCurrentlyValidatingElement(null);\n            break;\n          }\n        }\n      }\n    }\n    var jsxDEV = jsxDEV$1;\n    exports.Fragment = REACT_FRAGMENT_TYPE;\n    exports.jsxDEV = jsxDEV;\n  })();\n}","map":{"version":3,"names":["process","env","NODE_ENV","React","require","enableScopeAPI","enableTransitionTracing","enableLegacyHidden","enableRefAsProp","enableRenderableContext","enableDebugTracing","REACT_ELEMENT_TYPE","Symbol","for","REACT_PORTAL_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_PROVIDER_TYPE","REACT_CONSUMER_TYPE","REACT_CONTEXT_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_OFFSCREEN_TYPE","MAYBE_ITERATOR_SYMBOL","iterator","FAUX_ITERATOR_SYMBOL","getIteratorFn","maybeIterable","maybeIterator","ReactSharedInternals","__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE","error","format","_len2","arguments","length","args","Array","_key2","printWarning","level","stack","getStackAddendum","concat","argsWithFormat","map","item","String","unshift","Function","prototype","apply","call","console","getWrappedName","outerType","innerType","wrapperName","displayName","functionName","name","getContextName","type","REACT_CLIENT_REFERENCE$2","getComponentNameFromType","$$typeof","tag","context","consumer","_context","render","outerName","lazyComponent","payload","_payload","init","_init","x","hasOwnProperty","Object","assign","typeName","value","hasToStringTag","toStringTag","constructor","willCoercionThrow","testStringCoercion","e","checkKeyStringCoercion","REACT_CLIENT_REFERENCE$1","isValidElementType","getModuleId","undefined","isArrayImpl","isArray","a","disabledDepth","prevLog","prevInfo","prevWarn","prevError","prevGroup","prevGroupCollapsed","prevGroupEnd","disabledLog","__reactDisabledLog","disableLogs","log","info","warn","group","groupCollapsed","groupEnd","props","configurable","enumerable","writable","defineProperties","reenableLogs","prefix","describeBuiltInComponentFrame","Error","match","trim","reentry","componentFrameCache","PossiblyWeakMap","WeakMap","Map","describeNativeComponentFrame","fn","construct","frame","get","previousPrepareStackTrace","prepareStackTrace","previousDispatcher","H","RunInRootFrame","DetermineComponentFrameRoot","control","Fake","defineProperty","set","Reflect","maybePromise","catch","sample","namePropDescriptor","getOwnPropertyDescriptor","_RunInRootFrame$Deter","sampleStack","controlStack","sampleLines","split","controlLines","s","c","includes","_frame","replace","syntheticFrame","describeFunctionComponentFrame","shouldConstruct","Component","isReactComponent","describeUnknownElementTypeFrameInDEV","REACT_CLIENT_REFERENCE","getOwner","dispatcher","A","specialPropKeyWarningShown","didWarnAboutElementRef","hasValidRef","config","getter","isReactWarning","ref","hasValidKey","key","defineKeyPropWarningGetter","warnAboutAccessingKey","elementRefGetterWithDeprecationWarning","componentName","refProp","ReactElement","_ref","self","source","owner","debugStack","debugTask","element","_owner","_store","freeze","didWarnAboutKeySpread","jsxDEV$1","maybeKey","isStaticChildren","keys","typeString","children","i","validateChildKeys","filter","k","beforeExample","join","afterExample","propName","validateFragmentProps","getDeclarationErrorAddendum","node","parentType","child","isValidElement","validateExplicitKey","validated","iteratorFn","entries","step","next","done","object","ownerHasKeyUseWarning","currentComponentErrorInfo","getCurrentComponentErrorInfo","childOwner","ownerName","setCurrentlyValidatingElement","setExtraStackFrame","parentName","fragment","jsxDEV","exports","Fragment"],"sources":["C:/Users/Administrator/Desktop/Otoimmunuygulama/frontend/node_modules/react/cjs/react-jsx-dev-runtime.development.js"],"sourcesContent":["/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\nvar React = require('react');\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// as a normal prop instead of stripping it from the props object.\n// Passes `ref` as a normal prop instead of stripping it from the props object\n// during element creation.\n\nvar enableRefAsProp = true;\n\nvar enableRenderableContext = true; // Enables the `initialValue` option for `useDeferredValue`\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false;\n\nvar REACT_ELEMENT_TYPE = Symbol.for('react.transitional.element') ;\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider'); // TODO: Delete with enableRenderableContext\n\nvar REACT_CONSUMER_TYPE = Symbol.for('react.consumer');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var stack = ReactSharedInternals.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n}\n\nvar REACT_CLIENT_REFERENCE$2 = Symbol.for('react.client.reference'); // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  if (typeof type === 'function') {\n    if (type.$$typeof === REACT_CLIENT_REFERENCE$2) {\n      // TODO: Create a convention for naming client references with debug info.\n      return null;\n    }\n\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n  }\n\n  if (typeof type === 'object') {\n    {\n      if (typeof type.tag === 'number') {\n        error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n      }\n    }\n\n    switch (type.$$typeof) {\n      case REACT_PROVIDER_TYPE:\n        {\n          return null;\n        }\n\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n\n        {\n          return getContextName(context) + '.Provider';\n        }\n\n      case REACT_CONSUMER_TYPE:\n        {\n          var consumer = type;\n          return getContextName(consumer._context) + '.Consumer';\n        }\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n    }\n  }\n\n  return null;\n}\n\n// $FlowFixMe[method-unbinding]\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar assign = Object.assign;\n\n/*\n * The `'' + value` pattern (used in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object'; // $FlowFixMe[incompatible-return]\n\n    return type;\n  }\n} // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar REACT_CLIENT_REFERENCE$1 = Symbol.for('react.client.reference');\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || !enableRenderableContext  || type.$$typeof === REACT_CONSUMER_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_CLIENT_REFERENCE$1 || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar prefix;\nfunction describeBuiltInComponentFrame(name) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n/**\n * Leverages native browser/VM stack frames to get proper details (e.g.\n * filename, line + col number) for a single component in a component stack. We\n * do this by:\n *   (1) throwing and catching an error in the function - this will be our\n *       control error.\n *   (2) calling the component which will eventually throw an error that we'll\n *       catch - this will be our sample error.\n *   (3) diffing the control and sample error stacks to find the stack frame\n *       which represents our component.\n */\n\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if (!fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe[incompatible-type] It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher = null;\n\n  {\n    previousDispatcher = ReactSharedInternals.H; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactSharedInternals.H = null;\n    disableLogs();\n  }\n  /**\n   * Finding a common stack frame between sample and control errors can be\n   * tricky given the different types and levels of stack trace truncation from\n   * different JS VMs. So instead we'll attempt to control what that common\n   * frame should be through this object method:\n   * Having both the sample and control errors be in the function under the\n   * `DescribeNativeComponentFrameRoot` property, + setting the `name` and\n   * `displayName` properties of the function ensures that a stack\n   * frame exists that has the method name `DescribeNativeComponentFrameRoot` in\n   * it for both control and sample stacks.\n   */\n\n\n  var RunInRootFrame = {\n    DetermineComponentFrameRoot: function () {\n      var control;\n\n      try {\n        // This should throw.\n        if (construct) {\n          // Something should be setting the props in the constructor.\n          var Fake = function () {\n            throw Error();\n          }; // $FlowFixMe[prop-missing]\n\n\n          Object.defineProperty(Fake.prototype, 'props', {\n            set: function () {\n              // We use a throwing setter instead of frozen or non-writable props\n              // because that won't throw in a non-strict mode function.\n              throw Error();\n            }\n          });\n\n          if (typeof Reflect === 'object' && Reflect.construct) {\n            // We construct a different control for this case to include any extra\n            // frames added by the construct call.\n            try {\n              Reflect.construct(Fake, []);\n            } catch (x) {\n              control = x;\n            }\n\n            Reflect.construct(fn, [], Fake);\n          } else {\n            try {\n              Fake.call();\n            } catch (x) {\n              control = x;\n            } // $FlowFixMe[prop-missing] found when upgrading Flow\n\n\n            fn.call(Fake.prototype);\n          }\n        } else {\n          try {\n            throw Error();\n          } catch (x) {\n            control = x;\n          } // TODO(luna): This will currently only throw if the function component\n          // tries to access React/ReactDOM/props. We should probably make this throw\n          // in simple components too\n\n\n          var maybePromise = fn(); // If the function component returns a promise, it's likely an async\n          // component, which we don't yet support. Attach a noop catch handler to\n          // silence the error.\n          // TODO: Implement component stacks for async client components?\n\n          if (maybePromise && typeof maybePromise.catch === 'function') {\n            maybePromise.catch(function () {});\n          }\n        }\n      } catch (sample) {\n        // This is inlined manually because closure doesn't do it for us.\n        if (sample && control && typeof sample.stack === 'string') {\n          return [sample.stack, control.stack];\n        }\n      }\n\n      return [null, null];\n    }\n  }; // $FlowFixMe[prop-missing]\n\n  RunInRootFrame.DetermineComponentFrameRoot.displayName = 'DetermineComponentFrameRoot';\n  var namePropDescriptor = Object.getOwnPropertyDescriptor(RunInRootFrame.DetermineComponentFrameRoot, 'name'); // Before ES6, the `name` property was not configurable.\n\n  if (namePropDescriptor && namePropDescriptor.configurable) {\n    // V8 utilizes a function's `name` property when generating a stack trace.\n    Object.defineProperty(RunInRootFrame.DetermineComponentFrameRoot, // Configurable properties can be updated even if its writable descriptor\n    // is set to `false`.\n    // $FlowFixMe[cannot-write]\n    'name', {\n      value: 'DetermineComponentFrameRoot'\n    });\n  }\n\n  try {\n    var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(),\n        sampleStack = _RunInRootFrame$Deter[0],\n        controlStack = _RunInRootFrame$Deter[1];\n\n    if (sampleStack && controlStack) {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sampleStack.split('\\n');\n      var controlLines = controlStack.split('\\n');\n      var s = 0;\n      var c = 0;\n\n      while (s < sampleLines.length && !sampleLines[s].includes('DetermineComponentFrameRoot')) {\n        s++;\n      }\n\n      while (c < controlLines.length && !controlLines[c].includes('DetermineComponentFrameRoot')) {\n        c++;\n      } // We couldn't find our intentionally injected common root frame, attempt\n      // to find another common root frame by search from the bottom of the\n      // control stack...\n\n\n      if (s === sampleLines.length || c === controlLines.length) {\n        s = sampleLines.length - 1;\n        c = controlLines.length - 1;\n\n        while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n          // We expect at least one stack frame to be shared.\n          // Typically this will be the root most one. However, stack frames may be\n          // cut off due to maximum stack limits. In this case, one maybe cut off\n          // earlier than the other. We assume that the sample is longer or the same\n          // and there for cut off earlier. So we should find the root most frame in\n          // the sample somewhere in the control.\n          c--;\n        }\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                if (true) {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactSharedInternals.H = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload));\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar REACT_CLIENT_REFERENCE = Symbol.for('react.client.reference');\n\nfunction getOwner() {\n  {\n    var dispatcher = ReactSharedInternals.A;\n\n    if (dispatcher === null) {\n      return null;\n    }\n\n    return dispatcher.getOwner();\n  }\n}\n\nvar specialPropKeyWarningShown;\nvar didWarnAboutElementRef;\n\n{\n  didWarnAboutElementRef = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://react.dev/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction elementRefGetterWithDeprecationWarning() {\n  {\n    var componentName = getComponentNameFromType(this.type);\n\n    if (!didWarnAboutElementRef[componentName]) {\n      didWarnAboutElementRef[componentName] = true;\n\n      error('Accessing element.ref was removed in React 19. ref is now a ' + 'regular prop. It will be removed from the JSX Element ' + 'type in a future release.');\n    } // An undefined `element.ref` is coerced to `null` for\n    // backwards compatibility.\n\n\n    var refProp = this.props.ref;\n    return refProp !== undefined ? refProp : null;\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.transitional.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nfunction ReactElement(type, key, _ref, self, source, owner, props, debugStack, debugTask) {\n  var ref;\n\n  {\n    // When enableRefAsProp is on, ignore whatever was passed as the ref\n    // argument and treat `props.ref` as the source of truth. The only thing we\n    // use this for is `element.ref`, which will log a deprecation warning on\n    // access. In the next release, we can remove `element.ref` as well as the\n    // `ref` argument.\n    var refProp = props.ref; // An undefined `element.ref` is coerced to `null` for\n    // backwards compatibility.\n\n    ref = refProp !== undefined ? refProp : null;\n  }\n\n  var element;\n\n  {\n    // In dev, make `ref` a non-enumerable property with a warning. It's non-\n    // enumerable so that test matchers and serializers don't access it and\n    // trigger the warning.\n    //\n    // `ref` will be removed from the element completely in a future release.\n    element = {\n      // This tag allows us to uniquely identify this as a React Element\n      $$typeof: REACT_ELEMENT_TYPE,\n      // Built-in properties that belong on the element\n      type: type,\n      key: key,\n      props: props,\n      // Record the component responsible for creating this element.\n      _owner: owner\n    };\n\n    if (ref !== null) {\n      Object.defineProperty(element, 'ref', {\n        enumerable: false,\n        get: elementRefGetterWithDeprecationWarning\n      });\n    } else {\n      // Don't warn on access if a ref is not given. This reduces false\n      // positives in cases where a test serializer uses\n      // getOwnPropertyDescriptors to compare objects, like Jest does, which is\n      // a problem because it bypasses non-enumerability.\n      //\n      // So unfortunately this will trigger a false positive warning in Jest\n      // when the diff is printed:\n      //\n      //   expect(<div ref={ref} />).toEqual(<span ref={ref} />);\n      //\n      // A bit sketchy, but this is what we've done for the `props.key` and\n      // `props.ref` accessors for years, which implies it will be good enough\n      // for `element.ref`, too. Let's see if anyone complains.\n      Object.defineProperty(element, 'ref', {\n        enumerable: false,\n        value: null\n      });\n    }\n  }\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // debugInfo contains Server Component debug information.\n\n    Object.defineProperty(element, '_debugInfo', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: null\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n}\nvar didWarnAboutKeySpread = {};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV$1(type, config, maybeKey, isStaticChildren, source, self) {\n  {\n    if (!isValidElementType(type)) {\n      // This is an invalid element type.\n      //\n      // We warn in this case but don't throw. We expect the element creation to\n      // succeed and there will likely be errors in render.\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    } else {\n      // This is a valid element type.\n      // Skip key warning if the type isn't valid since our key validation logic\n      // doesn't expect a non-string/function type and can throw confusing\n      // errors. We don't want exception behavior to differ between dev and\n      // prod. (Rendering will throw with a helpful message and as soon as the\n      // type is fixed, the key warnings will appear.)\n      var children = config.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    } // Warn about key spread regardless of whether the type is valid.\n\n\n    if (hasOwnProperty.call(config, 'key')) {\n      var componentName = getComponentNameFromType(type);\n      var keys = Object.keys(config).filter(function (k) {\n        return k !== 'key';\n      });\n      var beforeExample = keys.length > 0 ? '{key: someKey, ' + keys.join(': ..., ') + ': ...}' : '{key: someKey}';\n\n      if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n        var afterExample = keys.length > 0 ? '{' + keys.join(': ..., ') + ': ...}' : '{}';\n\n        error('A props object containing a \"key\" prop is being spread into JSX:\\n' + '  let props = %s;\\n' + '  <%s {...props} />\\n' + 'React keys must be passed directly to JSX without using spread:\\n' + '  let props = %s;\\n' + '  <%s key={someKey} {...props} />', beforeExample, componentName, afterExample, componentName);\n\n        didWarnAboutKeySpread[componentName + beforeExample] = true;\n      }\n    }\n\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) ;\n\n    var props;\n\n    if (!('key' in config)) {\n      // If key was not spread in, we can reuse the original props object. This\n      // only works for `jsx`, not `createElement`, because `jsx` is a compiler\n      // target and the compiler always passes a new object. For `createElement`,\n      // we can't assume a new object is passed every time because it can be\n      // called manually.\n      //\n      // Spreading key is a warning in dev. In a future release, we will not\n      // remove a spread key from the props object. (But we'll still warn.) We'll\n      // always pass the object straight through.\n      props = config;\n    } else {\n      // We need to remove reserved props (key, prop, ref). Create a fresh props\n      // object and copy over all the non-reserved props. We don't use `delete`\n      // because in V8 it will deopt the object to dictionary mode.\n      props = {};\n\n      for (var propName in config) {\n        // Skip over reserved prop names\n        if (propName !== 'key' && (enableRefAsProp )) {\n          {\n            props[propName] = config[propName];\n          }\n        }\n      }\n    }\n\n    if (key || !enableRefAsProp ) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n    }\n\n    var element = ReactElement(type, key, ref, self, source, getOwner(), props);\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    }\n\n    return element;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    var owner = getOwner();\n\n    if (owner) {\n      var name = getComponentNameFromType(owner.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object' || !node) {\n      return;\n    }\n\n    if (node.$$typeof === REACT_CLIENT_REFERENCE) ; else if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n\n          if (iterator !== node) {\n            var step;\n\n            while (!(step = iterator.next()).done) {\n              if (isValidElement(step.value)) {\n                validateExplicitKey(step.value, parentType);\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nvar ownerHasKeyUseWarning = {};\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner != null && element._owner !== getOwner()) {\n      var ownerName = null;\n\n      if (typeof element._owner.tag === 'number') {\n        ownerName = getComponentNameFromType(element._owner.type);\n      } else if (typeof element._owner.name === 'string') {\n        ownerName = element._owner.name;\n      } // Give the component that originally created this child.\n\n\n      childOwner = \" It was passed a child from \" + ownerName + \".\";\n    }\n\n    setCurrentlyValidatingElement(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://react.dev/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement(null);\n  }\n}\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var stack = describeUnknownElementTypeFrameInDEV(element.type);\n      ReactSharedInternals.setExtraStackFrame(stack);\n    } else {\n      ReactSharedInternals.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = getComponentNameFromType(parentType);\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  // TODO: Move this to render phase instead of at element creation.\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement(null);\n        break;\n      }\n    }\n  }\n}\n\nvar jsxDEV = jsxDEV$1 ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsxDEV = jsxDEV;\n  })();\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}